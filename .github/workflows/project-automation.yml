name: Project Board Automation

on:
  issues:
    types: [opened, closed, reopened]
  pull_request:
    types: [opened, closed, ready_for_review]
  pull_request_review:
    types: [submitted]

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    steps:
      - name: Add issue to project
        if: ${{ github.event_name == 'issues' && github.event.action == 'opened' }}
        uses: actions/add-to-project@v0.4.0
        with:
          project-url: https://github.com/users/YOUR_USERNAME/projects/YOUR_PROJECT_NUMBER
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add PR to project
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }}
        uses: actions/add-to-project@v0.4.0
        with:
          project-url: https://github.com/users/YOUR_USERNAME/projects/YOUR_PROJECT_NUMBER
          github-token: ${{ secrets.GITHUB_TOKEN }}

  auto-label-issues:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'issues' && github.event.action == 'opened' }}
    steps:
      - name: Auto-label bugs
        if: contains(github.event.issue.title, 'bug') || contains(github.event.issue.title, 'Bug') || contains(github.event.issue.title, 'BUG')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['type: bug', 'priority: medium']
            });
      
      - name: Auto-label features
        if: contains(github.event.issue.title, 'feature') || contains(github.event.issue.title, 'Feature') || contains(github.event.issue.title, 'FEATURE')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['type: feature', 'priority: medium']
            });
      
      - name: Auto-label tasks
        if: contains(github.event.issue.title, 'task') || contains(github.event.issue.title, 'Task') || contains(github.event.issue.title, 'TASK')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['type: task', 'priority: medium']
            });

  move-pr-cards:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Move PR to In Review
        if: github.event.action == 'opened' || github.event.action == 'ready_for_review'
        uses: actions/github-script@v7
        with:
          script: |
            console.log('PR opened/ready for review - should move to In Review column');
            
      - name: Move PR to Done
        if: github.event.action == 'closed' && github.event.pull_request.merged
        uses: actions/github-script@v7
        with:
          script: |
            console.log('PR merged - should move to Done column');

  auto-label-prs:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }}
    steps:
      - name: Label PR based on title
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title.toLowerCase();
            const labels = [];
            
            if (title.startsWith('feat:')) {
              labels.push('type: feature');
            } else if (title.startsWith('fix:')) {
              labels.push('type: bug');
            } else if (title.startsWith('docs:')) {
              labels.push('type: documentation');
            } else if (title.startsWith('style:')) {
              labels.push('type: style');
            } else if (title.startsWith('refactor:')) {
              labels.push('type: refactor');
            } else if (title.startsWith('test:')) {
              labels.push('type: test');
            } else if (title.startsWith('chore:')) {
              labels.push('type: chore');
            } else if (title.startsWith('perf:')) {
              labels.push('type: performance');
            } else if (title.startsWith('security:')) {
              labels.push('type: security');
            }
            
            labels.push('status: in-review');
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labels
              });
            }

  update-pr-status:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request_review' }}
    steps:
      - name: Update labels based on review
        uses: actions/github-script@v7
        with:
          script: |
            const review = context.payload.review;
            const prNumber = context.payload.pull_request.number;
            
            if (review.state === 'approved') {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: ['status: approved']
              });
              
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  name: 'status: in-review'
                });
              } catch (error) {
                console.log('Label not found or already removed');
              }
            } else if (review.state === 'changes_requested') {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: ['status: changes-requested']
              });
            }