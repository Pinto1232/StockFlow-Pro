@using StockFlowPro.Web.Extensions
@using StockFlowPro.Web.Authorization
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - StockFlowPro.Web</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/StockFlowPro.Web.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3 sticky-top @(ViewData["Title"] as string == "Dashboard" ? "dashboard-nav" : "")">
            <div class="container-fluid">
                @if (User.Identity != null && User.Identity.IsAuthenticated)
                {
                    <span class="navbar-brand">StockFlowPro</span>
                }
                else
                {
                    <a class="navbar-brand" asp-area="" asp-page="/Index">StockFlowPro </a>
                }
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        @if (User.Identity == null || !User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Index">
                                    Home
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">
                                    Privacy
                                </a>
                            </li>
                        }
                        else
                        {
                            <!-- Role-based navigation for authenticated users -->
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Dashboard">
                                    <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                                </a>
                            </li>
                        }
                    </ul>
                    <ul class="navbar-nav ms-auto">
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item dropdown">
                                <button class="nav-link dropdown-toggle text-dark btn btn-link border-0 bg-transparent" id="userDropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false" onkeydown="if(event.key==='Enter'||event.key===' '){event.preventDefault();this.click();}">
                                    <i class="fas fa-user-circle me-1"></i>
                                    @User.GetFullName()
                                    <span class="badge bg-secondary ms-1">@User.GetUserRole()</span>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                    <li>
                                        <h6 class="dropdown-header">
                                            <i class="fas fa-info-circle me-1"></i>Account Info
                                        </h6>
                                    </li>
                                    <li><span class="dropdown-item-text"><strong>Email:</strong> @User.GetEmail()</span></li>
                                    <li><span class="dropdown-item-text"><strong>Role:</strong> @User.GetUserRole()</span></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <i class="fas fa-user-edit me-2"></i>Edit Profile
                                        </a>
                                    </li>
                                    @if (User.HasPermission(Permissions.System.ViewAdminPanel))
                                    {
                                        <li>
                                            <a class="dropdown-item" href="/AdminPanel">
                                                <i class="fas fa-tools me-2"></i>Admin Settings
                                            </a>
                                        </li>
                                    }
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form method="post" asp-page="/Login" asp-page-handler="Logout" class="d-inline w-100">
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="fas fa-sign-out-alt me-2"></i>Logout
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Login">
                                    <i class="fas fa-sign-in-alt me-1"></i>Login
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    
    <!-- Snackbar for notifications -->
    <div id="snackbar" class="snackbar"></div>
    
    <div class="@(ViewData["Title"] as string == "Dashboard" || ViewData["Title"] as string == "Admin Panel" ? "container-fluid" : "container")" style="overflow-x: hidden;">
        <main role="main" class="pb-3" style="overflow-x: hidden;">
            @RenderBody()
        </main>
    </div>
        <style>
        /* Sticky navbar styles */
        .sticky-top {
            z-index: 1020;
        }
        
        /* Ensure proper spacing when navbar is sticky */
        body {
            padding-top: 0;
        }
        
        .navbar-brand {
            cursor: default;
        }
        
        /* Fix button styling to look like nav-link */
        .nav-link.btn.btn-link {
            padding: 0.5rem 1rem;
            text-decoration: none;
            border: none !important;
            box-shadow: none !important;
        }
        
        .nav-link.btn.btn-link:hover,
        .nav-link.btn.btn-link:focus {
            text-decoration: none;
            box-shadow: none !important;
        }
        
        /* Snackbar Styles */
        .snackbar {
            visibility: hidden;
            min-width: 300px;
            margin-left: -150px;
            background-color: #ff9800;
            color: white;
            text-align: center;
            border-radius: 8px;
            padding: 16px 20px;
            position: fixed;
            z-index: 1050;
            left: 50%;
            bottom: 30px;
            font-size: 14px;
            font-weight: 500;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            border-left: 4px solid #f57c00;
        }
        
        .snackbar.show {
            visibility: visible;
            animation: slideInUp 0.4s ease-out, slideOutDown 0.4s ease-in 2.6s;
        }
        
        .snackbar.warning {
            background-color: #ff9800;
            border-left-color: #f57c00;
        }
        
        .snackbar.error {
            background-color: #f44336;
            border-left-color: #d32f2f;
        }
        
        .snackbar.info {
            background-color: #2196f3;
            border-left-color: #1976d2;
        }
        
        @@keyframes slideInUp {
            from {
                bottom: -50px;
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                bottom: 30px;
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @@keyframes slideOutDown {
            from {
                bottom: 30px;
                opacity: 1;
                transform: translateY(0);
            }
            to {
                bottom: -50px;
                opacity: 0;
                transform: translateY(50px);
            }
        }
    </style>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <script>
        function showSnackbar(message, type = 'warning') {
            const snackbar = document.getElementById('snackbar');
            snackbar.textContent = message;
            snackbar.className = `snackbar ${type} show`;
            
            setTimeout(function() {
                snackbar.className = snackbar.className.replace('show', '');
            }, 3000);
        }
    </script>
    
    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <script>
            $(document).ready(function() {
                let hasUnsavedChanges = false;
                
                $('input, textarea, select').on('change input', function() {
                    hasUnsavedChanges = true;
                });
                
                window.addEventListener('beforeunload', function(e) {
                    if (hasUnsavedChanges) {
                        showSnackbar('You are currently logged in. Please logout first before navigating away.', 'warning');
                        
                        var confirmationMessage = 'You are currently logged in. Please logout first before navigating away.';
                        e.returnValue = confirmationMessage;
                        return confirmationMessage;
                    }
                });
                
                $('a[href*="/Index"], a[href*="/Privacy"], a[href*="/Home"]').click(function(e) {
                    e.preventDefault();
                    showSnackbar('Please logout first before navigating to other pages.', 'warning');
                    return false;
                });
                
                $('form').on('submit', function() {
                    hasUnsavedChanges = false;
                });
                
                $('button[type="submit"]:contains("Logout")').click(function() {
                    hasUnsavedChanges = false;
                });
            });
        </script>
    }
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>