@using StockFlowPro.Web.Extensions
@using StockFlowPro.Web.Authorization
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - StockFlowPro.Web</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/layout.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/mobile-nav.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/signalr.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/StockFlowPro.Web.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    
    @* Page-specific CSS styles *@
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3 sticky-top @(ViewData["Title"] as string == "Dashboard" ? "dashboard-nav" : "")">
            <div class="container-fluid">
                @if (User.Identity != null && User.Identity.IsAuthenticated)
                {
                    <span class="navbar-brand">StockFlowPro</span>
                }
                else
                {
                    <a class="navbar-brand" asp-area="" asp-page="/Index">StockFlowPro </a>
                }
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        @if (User.Identity == null || !User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Index">
                                    Home
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">
                                    Privacy
                                </a>
                            </li>
                        }
                        else
                        {
                            <!-- Role-based navigation for authenticated users -->
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Dashboard">
                                    <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Products">
                                    <i class="fas fa-boxes me-1"></i>Products
                                </a>
                            </li>
                            @if (User.HasPermission(Permissions.Invoice.ViewInvoices))
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Invoices">
                                        <i class="fas fa-file-invoice-dollar me-1"></i>Invoices
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                    <ul class="navbar-nav ms-auto">
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <!-- SignalR Connection Status in Navbar -->
                            <li class="nav-item d-flex align-items-center me-3">
                                <div id="signalr-connection-status" class="d-flex align-items-center gap-2 bg-white border rounded-pill px-3 py-2 shadow-sm">
                                    <div id="signalr-status" class="signalr-status info">Connecting...</div>
                                    <div class="signalr-loading" id="signalr-loading"></div>
                                </div>
                            </li>
                            <li class="nav-item dropdown">
                                <button class="nav-link text-dark btn btn-link border-0 bg-transparent modern-user-toggle" 
                                        id="userDropdown" 
                                        type="button" 
                                        data-bs-toggle="dropdown" 
                                        aria-expanded="false" 
                                        aria-haspopup="true"
                                        aria-label="User account menu for @User.GetFullName()"
                                        title="Click to open account menu">
                                    <div class="user-avatar-wrapper">
                                        <img id="navbar-user-avatar" src="/images/default-avatar.svg" alt="User Avatar" class="user-avatar-image" style="display: none;">
                                        <i id="navbar-user-icon" class="fas fa-user-circle user-avatar-icon"></i>
                                        <div class="online-indicator" title="Online"></div>
                                    </div>
                                    <div class="user-info-wrapper">
                                        <span class="user-name">@User.GetFullName()</span>
                                        <span class="user-role-badge">@User.GetUserRole()</span>
                                    </div>
                                    <i class="fas fa-chevron-down dropdown-arrow"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end modern-account-dropdown" aria-labelledby="userDropdown">
                                    <li class="account-header">
                                        <div class="account-avatar">
                                            <img id="dropdown-user-avatar" src="/images/default-avatar.svg" alt="User Avatar" class="dropdown-avatar-image" style="display: none;">
                                            <i id="dropdown-user-icon" class="fas fa-user-circle"></i>
                                        </div>
                                        <div class="account-details">
                                            <h6 class="account-name">@User.GetFullName()</h6>
                                            <p class="account-email">@User.GetEmail()</p>
                                            <span class="account-role-tag">@User.GetUserRole()</span>
                                        </div>
                                    </li>
                                    <li class="dropdown-divider modern-divider"></li>
                                    <li>
                                        <a class="dropdown-item modern-dropdown-item" 
                                           href="/EditProfile" 
                                           role="menuitem"
                                           tabindex="0"
                                           aria-label="Edit your profile information"
                                           data-action="edit-profile">
                                            <div class="item-icon">
                                                <i class="fas fa-user-edit"></i>
                                            </div>
                                            <div class="item-content">
                                                <span class="item-title">Edit Profile</span>
                                                <span class="item-subtitle">Update your personal information</span>
                                            </div>
                                            <div class="item-shortcut">
                                                <kbd>Ctrl+P</kbd>
                                            </div>
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item modern-dropdown-item" 
                                           href="/UserSync"
                                           role="menuitem"
                                           tabindex="0"
                                           aria-label="Synchronize your account with the database"
                                           data-action="user-sync">
                                            <div class="item-icon">
                                                <i class="fas fa-sync-alt"></i>
                                            </div>
                                            <div class="item-content">
                                                <span class="item-title">Account Sync</span>
                                                <span class="item-subtitle">Synchronize account data</span>
                                            </div>
                                            <div class="item-shortcut">
                                                <kbd>Ctrl+S</kbd>
                                            </div>
                                        </a>
                                    </li>
                                    @if (User.HasPermission(Permissions.System.ViewAdminPanel))
                                    {
                                        <li>
                                            <a class="dropdown-item modern-dropdown-item" 
                                               href="/AdminPanel"
                                               role="menuitem"
                                               tabindex="0"
                                               aria-label="Access admin panel and system overview"
                                               data-action="admin-panel">
                                                <div class="item-icon admin-icon">
                                                    <i class="fas fa-tools"></i>
                                                </div>
                                                <div class="item-content">
                                                    <span class="item-title">Admin Panel</span>
                                                    <span class="item-subtitle">System overview and management</span>
                                                </div>
                                                <div class="item-shortcut">
                                                    <kbd>Ctrl+A</kbd>
                                                </div>
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item modern-dropdown-item" 
                                               href="/SystemSettings"
                                               role="menuitem"
                                               tabindex="0"
                                               aria-label="Configure system settings and preferences"
                                               data-action="system-settings">
                                                <div class="item-icon admin-icon">
                                                    <i class="fas fa-cogs"></i>
                                                </div>
                                                <div class="item-content">
                                                    <span class="item-title">System Settings</span>
                                                    <span class="item-subtitle">Configure system preferences</span>
                                                </div>
                                                <div class="item-shortcut">
                                                    <kbd>Ctrl+G</kbd>
                                                </div>
                                            </a>
                                        </li>
                                    }
                                    <li class="dropdown-divider modern-divider"></li>
                                    <li>
                                        <form method="post" asp-page="/Login" asp-page-handler="Logout" class="d-inline w-100" id="logoutForm">
                                            <button type="button" 
                                                    class="dropdown-item modern-dropdown-item logout-item"
                                                    role="menuitem"
                                                    tabindex="0"
                                                    aria-label="Sign out of your account"
                                                    data-action="logout"
                                                    onclick="confirmLogout(event)">
                                                <div class="item-icon logout-icon">
                                                    <i class="fas fa-sign-out-alt"></i>
                                                </div>
                                                <div class="item-content">
                                                    <span class="item-title">Logout</span>
                                                    <span class="item-subtitle">Sign out of your account</span>
                                                </div>
                                                <div class="item-shortcut">
                                                    <kbd>Ctrl+L</kbd>
                                                </div>
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Login">
                                    <i class="fas fa-sign-in-alt me-1"></i>Login
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    
    <!-- Snackbar for notifications -->
    <div id="snackbar" class="snackbar"></div>
    
    <div class="@(ViewData["Title"] as string == "Dashboard" || ViewData["Title"] as string == "Admin Panel" || ViewData["UseFullWidth"] != null ? "container-fluid" : "container") overflow-x-hidden">
        <main role="main" class="pb-3 overflow-x-hidden">
            @RenderBody()
        </main>
    </div>
        <style>
        /* Sticky navbar styles */
        .sticky-top {
            z-index: 1020;
        }
        
        /* Ensure proper spacing when navbar is sticky */
        body {
            padding-top: 0;
        }
        
        .navbar-brand {
            cursor: default;
        }
        
        /* Fix button styling to look like nav-link */
        .nav-link.btn.btn-link {
            padding: 0.5rem 1rem;
            text-decoration: none;
            border: none !important;
            box-shadow: none !important;
        }
        
        .nav-link.btn.btn-link:hover,
        .nav-link.btn.btn-link:focus {
            text-decoration: none;
            box-shadow: none !important;
        }
        
        /* Snackbar Styles */
        .snackbar {
            visibility: hidden;
            min-width: 300px;
            margin-left: -150px;
            background-color: #ff9800;
            color: white;
            text-align: center;
            border-radius: 8px;
            padding: 16px 20px;
            position: fixed;
            z-index: 1050;
            left: 50%;
            bottom: 30px;
            font-size: 14px;
            font-weight: 500;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            border-left: 4px solid #f57c00;
        }
        
        .snackbar.show {
            visibility: visible;
            animation: slideInUp 0.4s ease-out, slideOutDown 0.4s ease-in 2.6s;
        }
        
        .snackbar.warning {
            background-color: #ff9800;
            border-left-color: #f57c00;
        }
        
        .snackbar.error {
            background-color: #f44336;
            border-left-color: #d32f2f;
        }
        
        .snackbar.info {
            background-color: #2196f3;
            border-left-color: #1976d2;
        }
        
        @@keyframes slideInUp {
            from {
                bottom: -50px;
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                bottom: 30px;
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @@keyframes slideOutDown {
            from {
                bottom: 30px;
                opacity: 1;
                transform: translateY(0);
            }
            to {
                bottom: -50px;
                opacity: 0;
                transform: translateY(50px);
            }
        }
        
        /* Modern Account Dropdown Styles */
        .modern-user-toggle {
            display: flex !important;
            align-items: center;
            gap: 0.75rem;
            padding: 0.5rem 1rem !important;
            border-radius: 12px;
            transition: all 0.2s ease;
        }
        
        .modern-user-toggle:hover {
            background-color: #f8f9fa !important;
            transform: translateY(-1px);
        }
        
        .user-avatar-wrapper {
            display: flex;
            align-items: center;
            position: relative;
        }
        
        .user-avatar-icon {
            font-size: 1.8rem;
            color: #5a5cdb;
        }
        
        .user-avatar-image {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid #5a5cdb;
        }
        
        .dropdown-avatar-image {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid #5a5cdb;
        }
        
        .online-indicator {
            position: absolute;
            bottom: 2px;
            right: 2px;
            width: 12px;
            height: 12px;
            background: #28a745;
            border: 2px solid #fff;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }
        
        .dropdown-arrow {
            font-size: 0.8rem;
            color: #6c7a89;
            transition: transform 0.2s ease;
            margin-left: 0.5rem;
        }
        
        .modern-user-toggle[aria-expanded="true"] .dropdown-arrow {
            transform: rotate(180deg);
        }
        
        .user-info-wrapper {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: 0.1rem;
        }
        
        .user-name {
            font-weight: 600;
            font-size: 0.95rem;
            color: #232946;
            line-height: 1.2;
        }
        
        .user-role-badge {
            font-size: 0.75rem;
            font-weight: 500;
            color: #6c7a89;
            background: #f4f6fb;
            padding: 0.15rem 0.5rem;
            border-radius: 6px;
            line-height: 1;
        }
        
        .modern-account-dropdown {
            min-width: 320px;
            border: none;
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(90,92,219,0.12);
            padding: 0;
            margin-top: 0.5rem;
            background: #fff;
            overflow: hidden;
        }
        
        .account-header {
            padding: 1.5rem 1.25rem 1rem 1.25rem;
            background: linear-gradient(135deg, #f4f6fb 0%, #e5e7ef 100%);
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .account-avatar {
            flex-shrink: 0;
        }
        
        .account-avatar i {
            font-size: 2.5rem;
            color: #5a5cdb;
        }
        
        .account-details {
            flex: 1;
            min-width: 0;
        }
        
        .account-name {
            font-size: 1.1rem;
            font-weight: 700;
            color: #232946;
            margin: 0 0 0.25rem 0;
            line-height: 1.3;
        }
        
        .account-email {
            font-size: 0.9rem;
            color: #6c7a89;
            margin: 0 0 0.5rem 0;
            line-height: 1.3;
            word-break: break-word;
        }
        
        .account-role-tag {
            display: inline-block;
            font-size: 0.8rem;
            font-weight: 600;
            color: #5a5cdb;
            background: #fff;
            padding: 0.25rem 0.75rem;
            border-radius: 8px;
        }
        
        .modern-divider {
            margin: 0;
            border: none;
            opacity: 1;
        }
        
        .modern-dropdown-item {
            display: flex !important;
            align-items: center;
            gap: 1rem;
            padding: 1rem 1.25rem;
            border: none;
            background: none;
            width: 100%;
            text-align: left;
            transition: all 0.2s ease;
            text-decoration: none;
            color: inherit;
        }
        
        .modern-dropdown-item:hover,
        .modern-dropdown-item:focus {
            background: #f8f9fa;
            color: inherit;
            text-decoration: none;
            transform: translateX(4px);
        }
        
        .item-icon {
            flex-shrink: 0;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 10px;
            background: #f4f6fb;
            transition: all 0.2s ease;
        }
        
        .item-icon i {
            font-size: 1.1rem;
            color: #5a5cdb;
        }
        
        .admin-icon {
            background: #fff3cd;
        }
        
        .admin-icon i {
            color: #856404;
        }
        
        .logout-icon {
            background: #f8d7da;
        }
        
        .logout-icon i {
            color: #721c24;
        }
        
        .item-content {
            flex: 1;
            min-width: 0;
        }
        
        .item-title {
            display: block;
            font-size: 0.95rem;
            font-weight: 600;
            color: #232946;
            line-height: 1.3;
            margin-bottom: 0.1rem;
        }
        
        .item-subtitle {
            display: block;
            font-size: 0.8rem;
            color: #6c7a89;
            line-height: 1.3;
        }
        
        .item-shortcut {
            flex-shrink: 0;
            margin-left: auto;
        }
        
        .item-shortcut kbd {
            background: #f8f9fa;
            border: none;
            border-radius: 4px;
            padding: 0.2rem 0.4rem;
            font-size: 0.7rem;
            color: #6c7a89;
            font-family: monospace;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }
        
        .logout-item .item-title {
            color: #721c24;
        }
        
        .logout-item .item-subtitle {
            color: #a94442;
        }
        
        .modern-dropdown-item:hover .item-icon {
            transform: scale(1.05);
        }
        
        .modern-dropdown-item:hover .admin-icon {
            background: #ffeaa7;
        }
        
        .modern-dropdown-item:hover .logout-icon {
            background: #f5c6cb;
        }
        
        /* Mobile Navigation Styles */
        @@media (max-width: 991.98px) {
            /* Navbar brand adjustments */
            .navbar-brand {
                font-size: 1.1rem;
                font-weight: 600;
            }
            
            /* Navbar toggler improvements */
            .navbar-toggler {
                border: none;
                padding: 0.25rem 0.5rem;
                border-radius: 8px;
                background-color: #f8f9fa;
                transition: all 0.2s ease;
            }
            
            .navbar-toggler:hover {
                background-color: #e9ecef;
                transform: scale(1.05);
            }
            
            .navbar-toggler:focus {
                box-shadow: 0 0 0 0.2rem rgba(90, 92, 219, 0.25);
            }
            
            .navbar-toggler-icon {
                background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%2890, 92, 219, 0.8%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='m4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
            }
            
            /* Mobile navigation menu */
            .navbar-collapse {
                background-color: #fff;
                border-radius: 12px;
                margin-top: 0.5rem;
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
                border: 1px solid #e9ecef;
                padding: 1rem 0;
            }
            
            /* Navigation items styling */
            .navbar-nav .nav-item {
                margin: 0.25rem 0;
            }
            
            .navbar-nav .nav-link {
                padding: 0.75rem 1.5rem;
                border-radius: 8px;
                margin: 0 1rem;
                transition: all 0.2s ease;
                display: flex;
                align-items: center;
                font-weight: 500;
                position: relative;
            }
            
            .navbar-nav .nav-link:hover {
                background-color: #f8f9fa;
                color: #5a5cdb !important;
                transform: translateX(4px);
            }
            
            .navbar-nav .nav-link:active {
                background-color: #e9ecef;
            }
            
            /* Icon styling in mobile */
            .navbar-nav .nav-link i {
                font-size: 1.1rem;
                width: 20px;
                text-align: center;
                margin-right: 0.75rem;
                color: #5a5cdb;
            }
            
            /* Active state for navigation links */
            .navbar-nav .nav-link.active,
            .navbar-nav .nav-link[aria-current="page"] {
                background-color: #5a5cdb;
                color: #fff !important;
            }
            
            .navbar-nav .nav-link.active i,
            .navbar-nav .nav-link[aria-current="page"] i {
                color: #fff;
            }
            
            /* Divider between main nav and user menu */
            .navbar-nav.ms-auto {
                border-top: 1px solid #e9ecef;
                margin-top: 1rem;
                padding-top: 1rem;
            }
            
            /* User dropdown adjustments for mobile */
            .modern-account-dropdown {
                min-width: 280px;
                margin-top: 0.25rem;
            }
            
            .user-info-wrapper {
                display: none;
            }
            
            .modern-user-toggle {
                gap: 0;
                padding: 0.75rem 1.5rem !important;
                margin: 0 1rem;
                border-radius: 8px;
                justify-content: flex-start;
            }
            
            .modern-user-toggle:hover {
                background-color: #f8f9fa !important;
            }
            
            .account-header {
                padding: 1rem;
            }
            
            .modern-dropdown-item {
                padding: 0.75rem 1rem;
            }
            
            /* Improve touch targets */
            .navbar-nav .nav-link,
            .modern-user-toggle {
                min-height: 48px;
                display: flex;
                align-items: center;
            }
        }
        
        /* Extra small devices (phones, less than 576px) */
        @@media (max-width: 575.98px) {
            .navbar-brand {
                font-size: 1rem;
            }
            
            .navbar-collapse {
                margin-top: 0.25rem;
                padding: 0.75rem 0;
            }
            
            .navbar-nav .nav-link {
                padding: 0.6rem 1rem;
                margin: 0 0.5rem;
                font-size: 0.9rem;
            }
            
            .navbar-nav .nav-link i {
                font-size: 1rem;
                margin-right: 0.5rem;
            }
            
            .modern-user-toggle {
                padding: 0.6rem 1rem !important;
                margin: 0 0.5rem;
            }
            
            .modern-account-dropdown {
                min-width: 260px;
            }
        }
        
        /* Tablet and small desktop adjustments */
        @@media (min-width: 768px) and (max-width: 991.98px) {
            .navbar-nav .nav-link {
                padding: 0.5rem 1rem;
                margin: 0 0.25rem;
                border-radius: 6px;
            }
            
            .navbar-nav .nav-link i {
                margin-right: 0.5rem;
            }
        }
        
        /* Large screens - keep existing desktop styles */
        @@media (min-width: 992px) {
            .navbar-nav .nav-link {
                transition: all 0.2s ease;
                border-radius: 6px;
                padding: 0.5rem 1rem;
                margin: 0 0.25rem;
            }
            
            .navbar-nav .nav-link:hover {
                background-color: #f8f9fa;
                color: #5a5cdb !important;
                transform: translateY(-1px);
            }
            
            .navbar-nav .nav-link i {
                color: #5a5cdb;
                transition: color 0.2s ease;
            }
            
            .navbar-nav .nav-link:hover i {
                color: #5a5cdb;
            }
        }
        
        /* Animation for mobile menu */
        .navbar-collapse.collapsing {
            transition: height 0.3s ease;
        }
        
        .navbar-collapse.show {
            animation: slideDown 0.3s ease;
        }
        
        @@keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @@keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(40, 167, 69, 0.7);
            }
            70% {
                box-shadow: 0 0 0 6px rgba(40, 167, 69, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(40, 167, 69, 0);
            }
        }
        
        /* Loading state */
        .modern-dropdown-item.loading {
            opacity: 0.6;
            pointer-events: none;
        }
        
        .modern-dropdown-item.loading .item-icon {
            animation: spin 1s linear infinite;
        }
        
        @@keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
        
        /* Focus states for better accessibility */
        .modern-dropdown-item:focus {
            outline: none;
            background: #f8f9fa;
        }
        
        .modern-user-toggle:focus {
            outline: none;
            background-color: #f8f9fa !important;
        }
        
        /* Override any default Bootstrap link colors */
        .modern-account-dropdown a,
        .modern-account-dropdown a:hover,
        .modern-account-dropdown a:focus,
        .modern-account-dropdown a:active,
        .modern-account-dropdown a:visited {
            color: inherit !important;
            text-decoration: none !important;
        }
        
        .modern-account-dropdown .dropdown-item,
        .modern-account-dropdown .dropdown-item:hover,
        .modern-account-dropdown .dropdown-item:focus,
        .modern-account-dropdown .dropdown-item:active {
            color: inherit !important;
        }
    </style>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <script>
        function showSnackbar(message, type = 'warning') {
            const snackbar = document.getElementById('snackbar');
            snackbar.textContent = message;
            snackbar.className = `snackbar ${type} show`;
            
            setTimeout(function() {
                snackbar.className = snackbar.className.replace('show', '');
            }, 3000);
        }
        
        // Enhanced UX functionality for account dropdown
        function confirmLogout(event) {
            event.preventDefault();
            
            const button = event.currentTarget;
            const originalIcon = button.querySelector('.item-icon i');
            const originalText = button.querySelector('.item-title').textContent;
            
            // Show toast notification and proceed with logout
            showSnackbar('Signing out...', 'info');
            
            // Add loading state
            button.classList.add('loading');
            originalIcon.className = 'fas fa-spinner';
            button.querySelector('.item-title').textContent = 'Signing out...';
            
            // Submit the form after a brief delay to show the toast
            setTimeout(() => {
                document.getElementById('logoutForm').submit();
            }, 500);
        }
        
        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey) {
                switch(e.key.toLowerCase()) {
                    case 'p':
                        e.preventDefault();
                        const profileLink = document.querySelector('[data-action="edit-profile"]');
                        if (profileLink) {
                            window.location.href = profileLink.href;
                        }
                        break;
                    case 'a':
                        e.preventDefault();
                        const adminLink = document.querySelector('[data-action="admin-panel"]');
                        if (adminLink) {
                            adminLink.click();
                        }
                        break;
                    case 'g':
                        e.preventDefault();
                        const settingsLink = document.querySelector('[data-action="system-settings"]');
                        if (settingsLink) {
                            settingsLink.click();
                        }
                        break;
                    case 's':
                        e.preventDefault();
                        const syncLink = document.querySelector('[data-action="user-sync"]');
                        if (syncLink) {
                            syncLink.click();
                        }
                        break;
                    case 'l':
                        e.preventDefault();
                        const logoutBtn = document.querySelector('[data-action="logout"]');
                        if (logoutBtn) {
                            logoutBtn.click();
                        }
                        break;
                }
            }
        });
        
        // User Avatar Management
        window.updateNavbarAvatar = function(photoUrl) {
            const navbarAvatar = document.getElementById('navbar-user-avatar');
            const navbarIcon = document.getElementById('navbar-user-icon');
            const dropdownAvatar = document.getElementById('dropdown-user-avatar');
            const dropdownIcon = document.getElementById('dropdown-user-icon');
            
            if (photoUrl && photoUrl !== '/images/default-avatar.svg') {
                // Show photo, hide icon
                if (navbarAvatar) {
                    navbarAvatar.src = photoUrl;
                    navbarAvatar.style.display = 'block';
                }
                if (navbarIcon) {
                    navbarIcon.style.display = 'none';
                }
                if (dropdownAvatar) {
                    dropdownAvatar.src = photoUrl;
                    dropdownAvatar.style.display = 'block';
                }
                if (dropdownIcon) {
                    dropdownIcon.style.display = 'none';
                }
            } else {
                // Show icon, hide photo
                if (navbarAvatar) {
                    navbarAvatar.style.display = 'none';
                }
                if (navbarIcon) {
                    navbarIcon.style.display = 'block';
                }
                if (dropdownAvatar) {
                    dropdownAvatar.style.display = 'none';
                }
                if (dropdownIcon) {
                    dropdownIcon.style.display = 'block';
                }
            }
        }
        
        // Load user profile photo on page load
        async function loadUserAvatar() {
            try {
                const response = await fetch('/api/profile');
                if (response.ok) {
                    const profile = await response.json();
                    updateNavbarAvatar(profile.profilePhotoUrl);
                }
            } catch (error) {
                console.warn('Could not load user avatar:', error);
                // Keep default icon
            }
        }
        
        // Enhanced dropdown behavior
        document.addEventListener('DOMContentLoaded', function() {
            // Load user avatar
            loadUserAvatar();
            const dropdown = document.getElementById('userDropdown');
            const dropdownMenu = document.querySelector('.modern-account-dropdown');
            
            if (dropdown && dropdownMenu) {
                // Add click outside to close
                document.addEventListener('click', function(e) {
                    if (!dropdown.contains(e.target) && !dropdownMenu.contains(e.target)) {
                        const bsDropdown = bootstrap.Dropdown.getInstance(dropdown);
                        if (bsDropdown) {
                            bsDropdown.hide();
                        }
                    }
                });
                
                // Keyboard navigation
                dropdownMenu.addEventListener('keydown', function(e) {
                    const items = dropdownMenu.querySelectorAll('.modern-dropdown-item');
                    const currentIndex = Array.from(items).indexOf(document.activeElement);
                    
                    switch(e.key) {
                        case 'ArrowDown':
                            e.preventDefault();
                            const nextIndex = currentIndex < items.length - 1 ? currentIndex + 1 : 0;
                            items[nextIndex].focus();
                            break;
                        case 'ArrowUp':
                            e.preventDefault();
                            const prevIndex = currentIndex > 0 ? currentIndex - 1 : items.length - 1;
                            items[prevIndex].focus();
                            break;
                        case 'Escape':
                            e.preventDefault();
                            dropdown.click();
                            dropdown.focus();
                            break;
                        case 'Enter':
                        case ' ':
                            e.preventDefault();
                            if (document.activeElement) {
                                document.activeElement.click();
                            }
                            break;
                    }
                });
                
                // Auto-focus first item when dropdown opens
                dropdown.addEventListener('shown.bs.dropdown', function() {
                    const firstItem = dropdownMenu.querySelector('.modern-dropdown-item');
                    if (firstItem) {
                        setTimeout(() => firstItem.focus(), 100);
                    }
                });
            }
            
            // Enhanced mobile navigation
            const navbarToggler = document.querySelector('.navbar-toggler');
            const navbarCollapse = document.querySelector('.navbar-collapse');
            const navLinks = document.querySelectorAll('.navbar-nav .nav-link:not(.btn)'); // Exclude button-style nav links
            
            // Set active state based on current page
            const currentPath = window.location.pathname;
            navLinks.forEach(link => {
                try {
                    const href = link.getAttribute('href');
                    
                    // Skip invalid, empty, or placeholder links
                    if (!href || href.trim() === '' || href === '#' || href === 'javascript:void(0)') {
                        return;
                    }
                    
                    // Handle relative URLs
                    if (href.startsWith('/')) {
                        if (href === currentPath) {
                            link.classList.add('active');
                            link.setAttribute('aria-current', 'page');
                        }
                        return;
                    }
                    
                    // Handle absolute URLs
                    if (link.href && link.href.trim() !== '') {
                        const linkPath = new URL(link.href).pathname;
                        if (linkPath === currentPath) {
                            link.classList.add('active');
                            link.setAttribute('aria-current', 'page');
                        }
                    }
                } catch (error) {
                    // Handle invalid URLs gracefully - only log in development
                    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
                        console.warn('Invalid URL found in navigation link:', link.getAttribute('href'), error);
                    }
                }
            });
            
            // Auto-close mobile menu when clicking nav links
            navLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    const href = link.getAttribute('href');
                    
                    // Only close menu for valid navigation links (not placeholders or buttons)
                    if (href && 
                        href !== '#' && 
                        href.trim() !== '' && 
                        href !== 'javascript:void(0)' &&
                        !href.startsWith('javascript:') &&
                        window.innerWidth < 992) {
                        
                        // Add small delay to allow navigation to start
                        setTimeout(() => {
                            try {
                                const bsCollapse = bootstrap.Collapse.getInstance(navbarCollapse);
                                if (bsCollapse) {
                                    bsCollapse.hide();
                                }
                            } catch (error) {
                                // Fallback: manually hide the menu
                                if (navbarCollapse) {
                                    navbarCollapse.classList.remove('show');
                                    const toggler = document.querySelector('.navbar-toggler');
                                    if (toggler) {
                                        toggler.setAttribute('aria-expanded', 'false');
                                    }
                                }
                            }
                        }, 100);
                    }
                });
            });
            
            // Improve mobile menu accessibility
            if (navbarToggler && navbarCollapse) {
                navbarToggler.addEventListener('click', function() {
                    const isExpanded = this.getAttribute('aria-expanded') === 'true';
                    this.setAttribute('aria-expanded', !isExpanded);
                });
                
                // Close mobile menu when clicking outside
                document.addEventListener('click', function(e) {
                    if (window.innerWidth < 992 && 
                        !navbarToggler.contains(e.target) && 
                        !navbarCollapse.contains(e.target) &&
                        navbarCollapse.classList.contains('show')) {
                        try {
                            const bsCollapse = bootstrap.Collapse.getInstance(navbarCollapse);
                            if (bsCollapse) {
                                bsCollapse.hide();
                            }
                        } catch (error) {
                            console.warn('Error closing mobile menu:', error);
                            // Fallback: manually remove show class
                            navbarCollapse.classList.remove('show');
                            navbarToggler.setAttribute('aria-expanded', 'false');
                        }
                    }
                });
                
                // Handle escape key to close mobile menu
                document.addEventListener('keydown', function(e) {
                    if (e.key === 'Escape' && 
                        window.innerWidth < 992 && 
                        navbarCollapse.classList.contains('show')) {
                        try {
                            const bsCollapse = bootstrap.Collapse.getInstance(navbarCollapse);
                            if (bsCollapse) {
                                bsCollapse.hide();
                            }
                        } catch (error) {
                            console.warn('Error closing mobile menu with escape:', error);
                            navbarCollapse.classList.remove('show');
                            navbarToggler.setAttribute('aria-expanded', 'false');
                        }
                        navbarToggler.focus(); // Return focus to toggle button
                    }
                });
            }
        });
    </script>
    
    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <script>
            $(document).ready(function() {
                let hasUnsavedChanges = false;
                
                $('input, textarea, select').on('change input', function() {
                    hasUnsavedChanges = true;
                });
                
                window.addEventListener('beforeunload', function(e) {
                    if (hasUnsavedChanges) {
                        showSnackbar('You are currently logged in. Please logout first before navigating away.', 'warning');
                        
                        var confirmationMessage = 'You are currently logged in. Please logout first before navigating away.';
                        e.returnValue = confirmationMessage;
                        return confirmationMessage;
                    }
                });
                
                $('a[href*="/Index"], a[href*="/Privacy"], a[href*="/Home"]').click(function(e) {
                    e.preventDefault();
                    showSnackbar('Please logout first before navigating to other pages.', 'warning');
                    return false;
                });
                
                $('form').on('submit', function() {
                    hasUnsavedChanges = false;
                });
                
                $('button[type="submit"]:contains("Logout")').click(function() {
                    hasUnsavedChanges = false;
                });
            });
        </script>
    }
    
    @await RenderSectionAsync("Scripts", required: false)
    
    @* SignalR Integration *@
    @await Html.PartialAsync("_SignalRPartial")
</body>
</html>