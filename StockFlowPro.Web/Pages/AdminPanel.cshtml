@page
@model AdminPanelModel
@using StockFlowPro.Web.Authorization
@using StockFlowPro.Web.Extensions
@{
    ViewData["Title"] = "Admin Panel";
}

<div class="admin-panel-layout">
    <!-- Navigation Breadcrumb -->
    <nav class="admin-breadcrumb" aria-label="Breadcrumb">
        <ol class="breadcrumb-list">
            <li class="breadcrumb-item">
                <a href="/Dashboard" class="breadcrumb-link">
                    <i class="fas fa-home"></i>
                    <span>Dashboard</span>
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">
                <i class="fas fa-cogs"></i>
                <span>Admin Panel</span>
            </li>
        </ol>
    </nav>

    <div class="admin-content-wrapper">
        <!-- Enhanced Header -->
        <header class="admin-header">
            <div class="header-main">
                <div class="header-content">
                    <h1 class="admin-title">
                        <div class="title-icon">
                            <i class="fas fa-shield-alt"></i>
                        </div>
                        <div class="title-text">
                            <span class="title-main">Admin Panel</span>
                            <span class="title-sub">System Administration</span>
                        </div>
                    </h1>
                    <p class="admin-subtitle">Central hub for managing your application and monitoring system health</p>
                </div>
                <div class="header-actions">
                    <button class="action-btn refresh-btn" onclick="refreshDashboard()" title="Refresh Data">
                        <i class="fas fa-sync-alt"></i>
                        <span>Refresh</span>
                    </button>
                    <button class="action-btn settings-btn" onclick="openSettings()" title="System Settings">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </button>
                </div>
            </div>
        </header>

        <!-- System Status Banner -->
        <div class="status-banner">
            <div class="status-indicator">
                <div class="status-dot status-online"></div>
                <span class="status-text">System Online</span>
            </div>
            <div class="status-stats">
                <div class="stat-item">
                    <span class="stat-label">Uptime</span>
                    <span class="stat-value">99.9%</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">Active Users</span>
                    <span class="stat-value">24</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">Last Backup</span>
                    <span class="stat-value">2 hours ago</span>
                </div>
            </div>
        </div>

        <!-- Quick Actions Bar -->
        <div class="quick-actions">
            <h3 class="section-title">
                <i class="fas fa-bolt"></i>
                Quick Actions
            </h3>
            <div class="quick-actions-grid">
                <button class="quick-action-btn" onclick="createUser()" data-tooltip="Add New User">
                    <i class="fas fa-user-plus"></i>
                    <span>Add User</span>
                </button>
                <button class="quick-action-btn" onclick="backupSystem()" data-tooltip="Backup System Data">
                    <i class="fas fa-download"></i>
                    <span>Backup</span>
                </button>
                <button class="quick-action-btn" onclick="viewLogs()" data-tooltip="View System Logs">
                    <i class="fas fa-file-alt"></i>
                    <span>View Logs</span>
                </button>
                <button class="quick-action-btn" onclick="systemHealth()" data-tooltip="Check System Health">
                    <i class="fas fa-heartbeat"></i>
                    <span>Health Check</span>
                </button>
            </div>
        </div>

        <!-- Enhanced Admin Cards -->
        <div class="admin-section">
            <h3 class="section-title">
                <i class="fas fa-tools"></i>
                Administration Tools
            </h3>
            <div class="admin-cards-grid">
                @if (User.HasPermission(StockFlowPro.Web.Authorization.Permissions.Users.ViewAll))
                {
                    <!-- Enhanced User Management Card -->
                    <div class="admin-card" data-category="users">
                        <div class="card-header">
                            <div class="card-icon-wrapper">
                                <i class="fas fa-users-cog card-icon"></i>
                            </div>
                            <div class="card-badge">
                                <span class="badge-text">Essential</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">User Management</h5>
                            <p class="card-text">Manage system users, roles, and permissions to ensure security and proper access control.</p>
                            <div class="card-stats">
                                <div class="stat">
                                    <span class="stat-number">24</span>
                                    <span class="stat-label">Active Users</span>
                                </div>
                                <div class="stat">
                                    <span class="stat-number">3</span>
                                    <span class="stat-label">Roles</span>
                                </div>
                            </div>
                            <div class="card-actions">
                                <a href="/ManageUsers" class="btn btn-primary">
                                    <i class="fas fa-users"></i>
                                    <span>Manage Users</span>
                                </a>
                                <button class="btn btn-outline" onclick="quickAddUser()">
                                    <i class="fas fa-plus"></i>
                                    <span>Quick Add</span>
                                </button>
                            </div>
                        </div>
                    </div>
                }

                @if (User.HasPermission(StockFlowPro.Web.Authorization.Permissions.System.ViewAdminPanel))
                {
                    <!-- Enhanced Product Management Card -->
                    <div class="admin-card" data-category="inventory">
                        <div class="card-header">
                            <div class="card-icon-wrapper">
                                <i class="fas fa-box-open card-icon"></i>
                            </div>
                            <div class="card-badge">
                                <span class="badge-text">Core</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">Product Management</h5>
                            <p class="card-text">Add, edit, and organize your product inventory, including stock levels and pricing.</p>
                            <div class="card-stats">
                                <div class="stat">
                                    <span class="stat-number">1,247</span>
                                    <span class="stat-label">Products</span>
                                </div>
                                <div class="stat">
                                    <span class="stat-number">89%</span>
                                    <span class="stat-label">In Stock</span>
                                </div>
                            </div>
                            <div class="card-actions">
                                <a href="#" class="btn btn-success">
                                    <i class="fas fa-boxes"></i>
                                    <span>Manage Products</span>
                                </a>
                                <button class="btn btn-outline" onclick="quickAddProduct()">
                                    <i class="fas fa-plus"></i>
                                    <span>Add Product</span>
                                </button>
                            </div>
                        </div>
                    </div>
                }

                @if (User.HasPermission(StockFlowPro.Web.Authorization.Permissions.Reports.ViewBasic))
                {
                    <!-- Enhanced Reports Card -->
                    <div class="admin-card" data-category="analytics">
                        <div class="card-header">
                            <div class="card-icon-wrapper">
                                <i class="fas fa-chart-pie card-icon"></i>
                            </div>
                            <div class="card-badge">
                                <span class="badge-text">Insights</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">Reports & Analytics</h5>
                            <p class="card-text">View detailed reports and analytics to gain insights into your business performance.</p>
                            <div class="card-stats">
                                <div class="stat">
                                    <span class="stat-number">15</span>
                                    <span class="stat-label">Reports</span>
                                </div>
                                <div class="stat">
                                    <span class="stat-number">Daily</span>
                                    <span class="stat-label">Updates</span>
                                </div>
                            </div>
                            <div class="card-actions">
                                <a href="#" class="btn btn-info">
                                    <i class="fas fa-chart-line"></i>
                                    <span>View Reports</span>
                                </a>
                                <button class="btn btn-outline" onclick="generateReport()">
                                    <i class="fas fa-file-export"></i>
                                    <span>Generate</span>
                                </button>
                            </div>
                        </div>
                    </div>
                }

                <!-- System Settings Card -->
                <div class="admin-card" data-category="system">
                    <div class="card-header">
                        <div class="card-icon-wrapper">
                            <i class="fas fa-server card-icon"></i>
                        </div>
                        <div class="card-badge">
                            <span class="badge-text">System</span>
                        </div>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">System Settings</h5>
                        <p class="card-text">Configure system preferences, security settings, and application behavior.</p>
                        <div class="card-stats">
                            <div class="stat">
                                <span class="stat-number">12</span>
                                <span class="stat-label">Modules</span>
                            </div>
                            <div class="stat">
                                <span class="stat-number">Secure</span>
                                <span class="stat-label">Status</span>
                            </div>
                        </div>
                        <div class="card-actions">
                            <button class="btn btn-warning" onclick="openSystemSettings()">
                                <i class="fas fa-cogs"></i>
                                <span>System Config</span>
                            </button>
                            <button class="btn btn-outline" onclick="securitySettings()">
                                <i class="fas fa-shield-alt"></i>
                                <span>Security</span>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Monitoring & Logs Card -->
                <div class="admin-card" data-category="monitoring">
                    <div class="card-header">
                        <div class="card-icon-wrapper">
                            <i class="fas fa-chart-area card-icon"></i>
                        </div>
                        <div class="card-badge">
                            <span class="badge-text">Monitor</span>
                        </div>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">Monitoring & Logs</h5>
                        <p class="card-text">Monitor system performance, view logs, and track application health metrics.</p>
                        <div class="card-stats">
                            <div class="stat">
                                <span class="stat-number">99.9%</span>
                                <span class="stat-label">Uptime</span>
                            </div>
                            <div class="stat">
                                <span class="stat-number">2.1GB</span>
                                <span class="stat-label">Log Size</span>
                            </div>
                        </div>
                        <div class="card-actions">
                            <button class="btn btn-secondary" onclick="viewMonitoring()">
                                <i class="fas fa-monitor-heart-rate"></i>
                                <span>Monitoring</span>
                            </button>
                            <button class="btn btn-outline" onclick="downloadLogs()">
                                <i class="fas fa-download"></i>
                                <span>Download Logs</span>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Backup & Maintenance Card -->
                <div class="admin-card" data-category="maintenance">
                    <div class="card-header">
                        <div class="card-icon-wrapper">
                            <i class="fas fa-tools card-icon"></i>
                        </div>
                        <div class="card-badge">
                            <span class="badge-text">Maintenance</span>
                        </div>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">Backup & Maintenance</h5>
                        <p class="card-text">Perform system backups, maintenance tasks, and database optimization.</p>
                        <div class="card-stats">
                            <div class="stat">
                                <span class="stat-number">2h ago</span>
                                <span class="stat-label">Last Backup</span>
                            </div>
                            <div class="stat">
                                <span class="stat-number">Optimal</span>
                                <span class="stat-label">Performance</span>
                            </div>
                        </div>
                        <div class="card-actions">
                            <button class="btn btn-success" onclick="performBackup()">
                                <i class="fas fa-save"></i>
                                <span>Backup Now</span>
                            </button>
                            <button class="btn btn-outline" onclick="maintenanceMode()">
                                <i class="fas fa-wrench"></i>
                                <span>Maintenance</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Enhanced Admin Panel Layout */
    .admin-panel-layout {
        width: 100vw;
        margin-left: calc(-50vw + 50%);
        background: linear-gradient(135deg, #f4f6fb 0%, #e8ecf4 100%);
        min-height: 100vh;
        overflow-x: hidden;
        font-family: 'Inter', 'Segoe UI', Arial, sans-serif;
    }

    /* Breadcrumb Navigation */
    .admin-breadcrumb {
        background: rgba(255,255,255,0.9);
        backdrop-filter: blur(10px);
        padding: 1rem 2rem;
        border-bottom: 1px solid rgba(90,92,219,0.1);
        position: sticky;
        top: 0;
        z-index: 100;
    }

    .breadcrumb-list {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin: 0;
        padding: 0;
        list-style: none;
    }

    .breadcrumb-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .breadcrumb-item:not(:last-child)::after {
        content: '/';
        color: #6c7a89;
        margin-left: 0.5rem;
    }

    .breadcrumb-link {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #5a5cdb;
        text-decoration: none;
        padding: 0.5rem 0.75rem;
        border-radius: 6px;
        transition: all 0.2s ease;
        font-weight: 500;
    }

    .breadcrumb-link:hover {
        background: rgba(90,92,219,0.1);
        text-decoration: none;
        color: #5a5cdb;
    }

    .breadcrumb-item.active {
        color: #232946;
        font-weight: 600;
    }

    .admin-content-wrapper {
        padding: 2rem 3rem;
        max-width: 100%;
        overflow-x: hidden;
    }

    /* Enhanced Header */
    .admin-header {
        background: #fff;
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(90,92,219,0.08);
        border: 1px solid rgba(90,92,219,0.1);
        margin-bottom: 2rem;
        overflow: hidden;
    }

    .header-main {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 2.5rem;
        background: linear-gradient(135deg, #fff 0%, #f8f9fb 100%);
    }

    .header-content {
        flex: 1;
    }

    .admin-title {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        margin-bottom: 0.75rem;
    }

    .title-icon {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #5a5cdb 0%, #7f53ac 100%);
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        font-size: 1.8rem;
        box-shadow: 0 4px 16px rgba(90,92,219,0.3);
    }

    .title-text {
        display: flex;
        flex-direction: column;
    }

    .title-main {
        font-size: 2.5rem;
        font-weight: 800;
        color: #232946;
        line-height: 1.2;
        margin: 0;
    }

    .title-sub {
        font-size: 1rem;
        color: #6c7a89;
        font-weight: 500;
        margin-top: 0.25rem;
    }

    .admin-subtitle {
        font-size: 1.1rem;
        color: #6c7a89;
        margin: 0;
        line-height: 1.5;
    }

    .header-actions {
        display: flex;
        gap: 1rem;
    }

    .action-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: #fff;
        border: 2px solid #e5e7ef;
        color: #5a5cdb;
        padding: 0.75rem 1.25rem;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .action-btn:hover {
        background: #5a5cdb;
        color: #fff;
        border-color: #5a5cdb;
        transform: translateY(-2px);
        box-shadow: 0 4px 16px rgba(90,92,219,0.3);
    }

    /* System Status Banner */
    .status-banner {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: #fff;
        padding: 1.5rem 2rem;
        border-radius: 16px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(40,167,69,0.2);
    }

    .status-indicator {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .status-dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        animation: pulse-status 2s infinite;
    }

    .status-online {
        background: #fff;
    }

    .status-text {
        font-weight: 600;
        font-size: 1.1rem;
    }

    .status-stats {
        display: flex;
        gap: 2rem;
    }

    .stat-item {
        text-align: center;
    }

    .stat-label {
        display: block;
        font-size: 0.85rem;
        opacity: 0.9;
        margin-bottom: 0.25rem;
    }

    .stat-value {
        display: block;
        font-size: 1.1rem;
        font-weight: 700;
    }

    /* Quick Actions */
    .quick-actions {
        margin-bottom: 2.5rem;
    }

    .section-title {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-size: 1.4rem;
        font-weight: 700;
        color: #232946;
        margin-bottom: 1.5rem;
    }

    .quick-actions-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
    }

    .quick-action-btn {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        background: #fff;
        border: 2px solid #e5e7ef;
        padding: 1.5rem 1rem;
        border-radius: 12px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        color: #5a5cdb;
        font-weight: 600;
    }

    .quick-action-btn:hover {
        background: #5a5cdb;
        color: #fff;
        border-color: #5a5cdb;
        transform: translateY(-4px);
        box-shadow: 0 8px 24px rgba(90,92,219,0.2);
    }

    .quick-action-btn i {
        font-size: 1.5rem;
    }

    /* Enhanced Admin Cards */
    .admin-section {
        margin-bottom: 3rem;
    }

    .admin-cards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
        gap: 2rem;
        margin-bottom: 2rem;
    }

    .admin-card {
        background: #fff;
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(90,92,219,0.08);
        border: 1px solid rgba(90,92,219,0.1);
        transition: all 0.4s cubic-bezier(.4,0,.2,1);
        overflow: hidden;
        height: 100%;
        position: relative;
    }

    .admin-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: 0 16px 48px rgba(90,92,219,0.15);
    }

    .card-header {
        background: linear-gradient(135deg, #f8f9fb 0%, #e8ecf4 100%);
        padding: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid rgba(90,92,219,0.1);
    }

    .card-icon-wrapper {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #5a5cdb 0%, #7f53ac 100%);
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 16px rgba(90,92,219,0.3);
    }

    .card-icon {
        font-size: 1.8rem;
        color: #fff;
    }

    .card-badge {
        background: rgba(90,92,219,0.1);
        color: #5a5cdb;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .card-body {
        padding: 2rem;
        display: flex;
        flex-direction: column;
        height: calc(100% - 140px);
    }

    .card-title {
        font-size: 1.3rem;
        font-weight: 700;
        color: #232946;
        margin-bottom: 0.75rem;
    }

    .card-text {
        color: #6c7a89;
        font-size: 0.95rem;
        line-height: 1.6;
        margin-bottom: 1.5rem;
        flex-grow: 1;
    }

    .card-stats {
        display: flex;
        gap: 1.5rem;
        margin-bottom: 1.5rem;
        padding: 1rem;
        background: #f8f9fb;
        border-radius: 12px;
    }

    .stat {
        text-align: center;
        flex: 1;
    }

    .stat-number {
        display: block;
        font-size: 1.4rem;
        font-weight: 700;
        color: #5a5cdb;
        margin-bottom: 0.25rem;
    }

    .stat-label {
        font-size: 0.8rem;
        color: #6c7a89;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .card-actions {
        display: flex;
        gap: 0.75rem;
    }

    .btn {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        padding: 0.75rem 1.25rem;
        border-radius: 10px;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        flex: 1;
        font-size: 0.9rem;
    }

    .btn-primary {
        background: linear-gradient(135deg, #5a5cdb 0%, #7f53ac 100%);
        color: #fff;
        box-shadow: 0 2px 8px rgba(90,92,219,0.3);
    }

    .btn-success {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: #fff;
        box-shadow: 0 2px 8px rgba(40,167,69,0.3);
    }

    .btn-info {
        background: linear-gradient(135deg, #17a2b8 0%, #6f42c1 100%);
        color: #fff;
        box-shadow: 0 2px 8px rgba(23,162,184,0.3);
    }

    .btn-warning {
        background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
        color: #fff;
        box-shadow: 0 2px 8px rgba(255,193,7,0.3);
    }

    .btn-secondary {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        color: #fff;
        box-shadow: 0 2px 8px rgba(108,117,125,0.3);
    }

    .btn-outline {
        background: transparent;
        color: #5a5cdb;
        border: 2px solid #e5e7ef;
    }

    .btn:hover {
        transform: translateY(-2px);
        text-decoration: none;
        color: #fff;
    }

    .btn-outline:hover {
        background: #5a5cdb;
        border-color: #5a5cdb;
        color: #fff;
    }

    /* Animations */
    @@keyframes pulse-status {
        0% { box-shadow: 0 0 0 0 rgba(255,255,255,0.7); }
        70% { box-shadow: 0 0 0 6px rgba(255,255,255,0); }
        100% { box-shadow: 0 0 0 0 rgba(255,255,255,0); }
    }

    /* Tooltips */
    [data-tooltip] {
        position: relative;
    }

    [data-tooltip]:hover::after {
        content: attr(data-tooltip);
        position: absolute;
        bottom: 100%;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0,0,0,0.9);
        color: #fff;
        padding: 0.5rem 0.75rem;
        border-radius: 6px;
        font-size: 0.8rem;
        white-space: nowrap;
        z-index: 1000;
        margin-bottom: 0.5rem;
        opacity: 0;
        animation: fadeInTooltip 0.3s ease forwards;
    }

    @@keyframes fadeInTooltip {
        from { opacity: 0; transform: translateX(-50%) translateY(5px); }
        to { opacity: 1; transform: translateX(-50%) translateY(0); }
    }

    /* Responsive Design */
    @@media (min-width: 1200px) {
        .admin-content-wrapper {
            padding: 2.5rem 4rem;
        }
        
        .title-main {
            font-size: 3rem;
        }
        
        .admin-cards-grid {
            grid-template-columns: repeat(auto-fit, minmax(420px, 1fr));
            gap: 2.5rem;
        }
    }

    @@media (max-width: 991.98px) {
        .admin-panel-layout {
            margin-left: calc(-50vw + 50%);
        }
        
        .admin-content-wrapper {
            padding: 1.5rem 2rem;
        }
        
        .title-main {
            font-size: 2rem;
        }
        
        .admin-cards-grid {
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 1.5rem;
        }

        .header-main {
            flex-direction: column;
            gap: 1.5rem;
            text-align: center;
        }

        .status-banner {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
        }

        .status-stats {
            justify-content: center;
        }
    }

    @@media (max-width: 576px) {
        .admin-content-wrapper {
            padding: 1rem;
        }
        
        .admin-title {
            flex-direction: column;
            text-align: center;
            gap: 1rem;
        }
        
        .title-main {
            font-size: 1.8rem;
        }
        
        .admin-cards-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }
        
        .header-main {
            padding: 1.5rem;
        }
        
        .admin-panel-layout {
            width: 100%;
            margin-left: 0;
        }

        .admin-breadcrumb {
            padding: 0.75rem 1rem;
        }

        .quick-actions-grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .card-actions {
            flex-direction: column;
        }

        .status-stats {
            gap: 1rem;
        }
    }
</style>

<script>
    // Enhanced Admin Panel JavaScript functionality
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize tooltips and animations
        initializeAnimations();
        updateSystemStats();
        
        // Auto-refresh system stats every 30 seconds
        setInterval(updateSystemStats, 30000);
    });

    // Refresh dashboard data
    function refreshDashboard() {
        const refreshBtn = document.querySelector('.refresh-btn');
        const icon = refreshBtn.querySelector('i');
        
        // Add loading state
        refreshBtn.disabled = true;
        icon.classList.add('fa-spin');
        
        // Simulate data refresh
        setTimeout(() => {
            updateSystemStats();
            refreshBtn.disabled = false;
            icon.classList.remove('fa-spin');
            showNotification('Dashboard refreshed successfully!', 'success');
        }, 1500);
    }

    // Open system settings
    function openSettings() {
        showNotification('System settings panel coming soon!', 'info');
    }

    // Quick Actions
    function createUser() {
        showNotification('Redirecting to user creation...', 'info');
        setTimeout(() => {
            window.location.href = '/ManageUsers';
        }, 1000);
    }

    function backupSystem() {
        const confirmed = confirm('Are you sure you want to start a system backup?');
        if (confirmed) {
            showNotification('System backup initiated...', 'success');
            // Simulate backup process
            setTimeout(() => {
                showNotification('Backup completed successfully!', 'success');
                updateSystemStats();
            }, 3000);
        }
    }

    function viewLogs() {
        showNotification('Opening system logs...', 'info');
        // Simulate opening logs
        setTimeout(() => {
            alert('System Logs:\n\n[INFO] System started successfully\n[INFO] User authentication enabled\n[INFO] Database connection established\n[INFO] All services running normally');
        }, 500);
    }

    function systemHealth() {
        showNotification('Running system health check...', 'info');
        setTimeout(() => {
            const healthReport = {
                cpu: Math.floor(Math.random() * 30) + 10,
                memory: Math.floor(Math.random() * 40) + 30,
                disk: Math.floor(Math.random() * 20) + 15,
                network: 'Optimal'
            };
            
            alert(`System Health Report:\n\nCPU Usage: ${healthReport.cpu}%\nMemory Usage: ${healthReport.memory}%\nDisk Usage: ${healthReport.disk}%\nNetwork Status: ${healthReport.network}\n\nAll systems operating normally.`);
        }, 2000);
    }

    // Card Actions
    function quickAddUser() {
        const userName = prompt('Enter new user name:');
        if (userName) {
            showNotification(`Creating user: ${userName}...`, 'info');
            setTimeout(() => {
                showNotification(`User ${userName} created successfully!`, 'success');
            }, 1500);
        }
    }

    function quickAddProduct() {
        const productName = prompt('Enter new product name:');
        if (productName) {
            showNotification(`Adding product: ${productName}...`, 'info');
            setTimeout(() => {
                showNotification(`Product ${productName} added successfully!`, 'success');
            }, 1500);
        }
    }

    function generateReport() {
        showNotification('Generating custom report...', 'info');
        setTimeout(() => {
            const reportData = {
                totalSales: ' + (Math.floor(Math.random() * 50000) + 10000).toLocaleString(),
                activeUsers: Math.floor(Math.random() * 50) + 20,
                products: Math.floor(Math.random() * 500) + 1000,
                orders: Math.floor(Math.random() * 200) + 100
            };
            
            alert(`Generated Report:\n\nTotal Sales: ${reportData.totalSales}\nActive Users: ${reportData.activeUsers}\nTotal Products: ${reportData.products}\nOrders This Month: ${reportData.orders}`);
        }, 2000);
    }

    function openSystemSettings() {
        showNotification('Opening system configuration...', 'info');
    }

    function securitySettings() {
        showNotification('Opening security settings...', 'info');
    }

    function viewMonitoring() {
        showNotification('Loading monitoring dashboard...', 'info');
    }

    function downloadLogs() {
        showNotification('Preparing log files for download...', 'info');
        setTimeout(() => {
            showNotification('Log files ready for download!', 'success');
        }, 2000);
    }

    function performBackup() {
        const confirmed = confirm('This will create a full system backup. Continue?');
        if (confirmed) {
            showNotification('Starting full system backup...', 'info');
            setTimeout(() => {
                showNotification('Backup completed successfully!', 'success');
                updateSystemStats();
            }, 4000);
        }
    }

    function maintenanceMode() {
        const confirmed = confirm('This will put the system in maintenance mode. Continue?');
        if (confirmed) {
            showNotification('Entering maintenance mode...', 'warning');
        }
    }

    // Update system statistics
    function updateSystemStats() {
        // Simulate real-time data updates
        const stats = {
            uptime: (99.8 + Math.random() * 0.2).toFixed(1) + '%',
            activeUsers: Math.floor(Math.random() * 10) + 20,
            lastBackup: Math.floor(Math.random() * 5) + 1 + 'h ago'
        };

        // Update status banner if it exists
        const uptimeElement = document.querySelector('.stat-value');
        const activeUsersElement = document.querySelectorAll('.stat-value')[1];
        const backupElement = document.querySelectorAll('.stat-value')[2];

        if (uptimeElement) uptimeElement.textContent = stats.uptime;
        if (activeUsersElement) activeUsersElement.textContent = stats.activeUsers;
        if (backupElement) backupElement.textContent = stats.lastBackup;
    }

    // Initialize animations and interactions
    function initializeAnimations() {
        // Add stagger animation to cards
        const cards = document.querySelectorAll('.admin-card');
        cards.forEach((card, index) => {
            card.style.animationDelay = `${index * 0.1}s`;
            card.classList.add('fade-in-up');
        });

        // Add hover effects to quick action buttons
        const quickActions = document.querySelectorAll('.quick-action-btn');
        quickActions.forEach(btn => {
            btn.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-4px) scale(1.05)';
            });
            
            btn.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });
    }

    // Notification system
    function showNotification(message, type = 'info') {
        // Remove existing notifications
        const existingNotification = document.querySelector('.admin-notification');
        if (existingNotification) {
            existingNotification.remove();
        }

        // Create notification element
        const notification = document.createElement('div');
        notification.className = `admin-notification notification-${type}`;
        notification.innerHTML = `
            <div class="notification-content">
                <i class="fas fa-${getNotificationIcon(type)}"></i>
                <span>${message}</span>
            </div>
            <button class="notification-close" onclick="this.parentElement.remove()">
                <i class="fas fa-times"></i>
            </button>
        `;

        // Add styles
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${getNotificationColor(type)};
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.2);
            z-index: 1000;
            display: flex;
            align-items: center;
            gap: 1rem;
            min-width: 300px;
            animation: slideInRight 0.3s ease;
        `;

        document.body.appendChild(notification);

        // Auto-remove after 5 seconds
        setTimeout(() => {
            if (notification.parentElement) {
                notification.style.animation = 'slideOutRight 0.3s ease';
                setTimeout(() => notification.remove(), 300);
            }
        }, 5000);
    }

    function getNotificationIcon(type) {
        switch(type) {
            case 'success': return 'check-circle';
            case 'warning': return 'exclamation-triangle';
            case 'error': return 'times-circle';
            default: return 'info-circle';
        }
    }

    function getNotificationColor(type) {
        switch(type) {
            case 'success': return 'linear-gradient(135deg, #28a745, #20c997)';
            case 'warning': return 'linear-gradient(135deg, #ffc107, #fd7e14)';
            case 'error': return 'linear-gradient(135deg, #dc3545, #c82333)';
            default: return 'linear-gradient(135deg, #5a5cdb, #7f53ac)';
        }
    }

    // Add CSS animations
    const style = document.createElement('style');
    style.textContent = `
        @@keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        @@keyframes slideOutRight {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }
        
        @@keyframes fadeInUp {
            from { transform: translateY(30px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
        
        .fade-in-up {
            animation: fadeInUp 0.6s ease forwards;
        }
        
        .notification-content {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            flex: 1;
        }
        
        .notification-close {
            background: none;
            border: none;
            color: white;
            cursor: pointer;
            padding: 0.25rem;
            border-radius: 4px;
            transition: background 0.2s ease;
        }
        
        .notification-close:hover {
            background: rgba(255,255,255,0.2);
        }
    `;
    document.head.appendChild(style);
</script>