@page
@using StockFlowPro.Web.Extensions
@using StockFlowPro.Web.Authorization
@model StockFlowPro.Web.Pages.ProductsModel
@{
    ViewData["Title"] = "Product Management";
}

<div class="manage-products-container container-fluid">
    <!-- Header -->
    <div class="page-header">
        <h1 class="page-title">Product Management</h1>
        <div class="header-actions">
            <a href="/Dashboard" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
            </a>
            @if (User.HasPermission(Permissions.Product.CreateProducts))
            {
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createProductModal">
                    <i class="fas fa-plus me-2"></i>Add New Product
                </button>
            }
        </div>
    </div>

    <!-- Dashboard Stats Cards -->
    <div class="stats-cards-container mb-4">
        <div class="stats-card stats-card-primary">
            <div class="stats-card-icon">
                <i class="fas fa-boxes"></i>
            </div>
            <div class="stats-card-content">
                <div class="stats-card-label">Total Products</div>
                <div class="stats-card-value" id="totalProducts" title="-">-</div>
            </div>
            <div class="stats-card-accent"></div>
        </div>

        <div class="stats-card stats-card-success">
            <div class="stats-card-icon">
                <i class="fas fa-dollar-sign"></i>
            </div>
            <div class="stats-card-content">
                <div class="stats-card-label">Total Value</div>
                <div class="stats-card-value" id="totalValue" title="-">-</div>
            </div>
            <div class="stats-card-accent"></div>
        </div>

        <div class="stats-card stats-card-warning">
            <div class="stats-card-icon">
                <i class="fas fa-exclamation-triangle"></i>
            </div>
            <div class="stats-card-content">
                <div class="stats-card-label">Low Stock</div>
                <div class="stats-card-value" id="lowStockCount" title="-">-</div>
            </div>
            <div class="stats-card-accent"></div>
        </div>

        <div class="stats-card stats-card-danger">
            <div class="stats-card-icon">
                <i class="fas fa-times-circle"></i>
            </div>
            <div class="stats-card-content">
                <div class="stats-card-label">Out of Stock</div>
                <div class="stats-card-value" id="outOfStockCount" title="-">-</div>
            </div>
            <div class="stats-card-accent"></div>
        </div>
    </div>

    <!-- Search and Filters -->
    <div class="search-filters-bar">
        <div class="search-row">
            <div class="search-box">
                <i class="fas fa-search search-icon"></i>
                <input type="text" id="searchInput" class="form-control" placeholder="Search by product name...">
                <button class="btn btn-clear-search" type="button" id="clearSearch">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="filter-options">
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="activeOnlyFilter">
                <label class="form-check-label" for="activeOnlyFilter">Active Only</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="inStockOnlyFilter">
                <label class="form-check-label" for="inStockOnlyFilter">In Stock Only</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="lowStockOnlyFilter">
                <label class="form-check-label" for="lowStockOnlyFilter">Low Stock Only</label>
            </div>
            <button type="button" class="btn btn-sm btn-secondary" id="clearFilters">Clear Filters</button>
            <button type="button" class="btn btn-sm" id="showConsoleBtn" style="background: linear-gradient(135deg, #1e293b 0%, #334155 100%); color: white; border: none;">
                <i class="fas fa-terminal me-1"></i>Show Console Log
            </button>
            <div class="dropdown">
                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                    <span id="pageSize">25</span> per page
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li><a class="dropdown-item page-size-option" href="#" data-size="10">10</a></li>
                    <li><a class="dropdown-item page-size-option" href="#" data-size="25">25</a></li>
                    <li><a class="dropdown-item page-size-option" href="#" data-size="50">50</a></li>
                    <li><a class="dropdown-item page-size-option" href="#" data-size="100">100</a></li>
                </ul>
            </div>
        </div>
    </div>

    <!-- Console Log Section -->
    <div class="card mb-4" id="consoleLogCard" style="display: none;">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h6 class="mb-0">
                <i class="fas fa-terminal me-2"></i>Product Management Console Log
            </h6>
            <div>
                <button type="button" class="btn btn-sm btn-outline-secondary" id="clearConsoleBtn">
                    <i class="fas fa-trash me-1"></i>Clear
                </button>
                <button type="button" class="btn btn-sm btn-outline-secondary" id="toggleConsoleBtn">
                    <i class="fas fa-eye-slash me-1"></i>Hide
                </button>
            </div>
        </div>
        <div class="card-body p-0" id="consoleLogBody">
            <div id="consoleLogContainer" class="console-log-container">
                <div class="console-log-entry system">
                    <span class="timestamp">[System]</span>
                    <span class="message">Product Management Console initialized - Ready to log database operations</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Products Table Card -->
    <div class="card product-table-card">
        <div class="card-body p-0">
            <div id="product-table-section">
                <div class="table-responsive-wrapper">
                    <table class="table table-hover product-table" id="productsTable">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Cost per Item</th>
                                <th>Stock</th>
                                <th>Total Value</th>
                                <th>Status</th>
                                <th>Created</th>
                                <th class="text-right">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="productsTableBody">
                            <!-- Products will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="card-footer d-flex justify-content-between align-items-center">
            <span id="productCount" class="product-count-badge">0 products</span>
            <nav aria-label="Product pagination">
                <ul class="pagination pagination-sm justify-content-end mb-0" id="paginationNav">
                    <!-- Pagination will be generated here -->
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Create Product Modal -->
<div class="modal fade" id="createProductModal" tabindex="-1" aria-labelledby="createProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createProductModalLabel">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="createProductForm">
                <div class="modal-body">
                    <div class="form-group mb-3">
                        <label for="createProductName">Product Name</label>
                        <input type="text" class="form-control" id="createProductName" required>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createProductCost">Cost per Item</label>
                        <input type="number" step="0.01" class="form-control" id="createProductCost" required>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createProductStock">Initial Stock</label>
                        <input type="number" class="form-control" id="createProductStock" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Product</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Product Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editProductForm">
                <div class="modal-body">
                    <input type="hidden" id="editProductId">
                    <div class="form-group mb-3">
                        <label for="editProductName">Product Name</label>
                        <input type="text" class="form-control" id="editProductName" required>
                    </div>
                    <div class="form-group mb-3">
                        <label for="editProductCost">Cost per Item</label>
                        <input type="number" step="0.01" class="form-control" id="editProductCost" required>
                    </div>
                    <div class="form-group mb-3">
                        <label for="editProductStock">Stock</label>
                        <input type="number" class="form-control" id="editProductStock" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Product</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/products.css" asp-append-version="true" />
    <style>
        /* Modern Stats Cards */
        .stats-cards-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin: 0 1.5rem 2rem 1.5rem;
        }

        .stats-card {
            position: relative;
            background: white;
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid #e2e8f0;
            transition: all 0.3s ease;
            overflow: hidden;
            display: flex;
            align-items: center;
            gap: 1.5rem;
            min-height: 120px;
        }

        .stats-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
        }

        .stats-card-icon {
            width: 64px;
            height: 64px;
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.75rem;
            color: white;
            flex-shrink: 0;
            position: relative;
            z-index: 2;
            transition: all 0.3s ease;
        }

        .stats-card-content {
            flex: 1;
            min-width: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .stats-card-label {
            font-size: 0.875rem;
            font-weight: 600;
            color: #64748b;
            margin-bottom: 0.75rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            line-height: 1.2;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .stats-card-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: #1e293b;
            line-height: 1;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            cursor: help;
            position: relative;
        }

        /* Custom Tooltip Styling */
        .stats-card-value[title]:hover::after {
            content: attr(title);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: #1e293b;
            color: white;
            padding: 0.5rem 0.75rem;
            border-radius: 8px;
            font-size: 0.875rem;
            font-weight: 600;
            white-space: nowrap;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            margin-bottom: 0.5rem;
            opacity: 0;
            animation: tooltipFadeIn 0.2s ease-out forwards;
        }

        .stats-card-value[title]:hover::before {
            content: '';
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            border: 6px solid transparent;
            border-top-color: #1e293b;
            z-index: 1000;
            margin-bottom: -6px;
            opacity: 0;
            animation: tooltipFadeIn 0.2s ease-out forwards;
        }

        @@keyframes tooltipFadeIn {
            from {
                opacity: 0;
                transform: translateX(-50%) translateY(-5px);
            }
            to {
                opacity: 1;
                transform: translateX(-50%) translateY(0);
            }
        }

        .stats-card-accent {
            position: absolute;
            top: 0;
            right: 0;
            width: 4px;
            height: 100%;
            border-radius: 0 16px 16px 0;
        }

        /* Primary Card (Total Products) */
        .stats-card-primary .stats-card-icon {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
            box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
        }

        .stats-card-primary .stats-card-accent {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
        }

        .stats-card-primary:hover .stats-card-icon {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);
        }

        /* Success Card (Total Value) */
        .stats-card-success .stats-card-icon {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
        }

        .stats-card-success .stats-card-accent {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        }

        .stats-card-success:hover .stats-card-icon {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(16, 185, 129, 0.4);
        }

        /* Warning Card (Low Stock) */
        .stats-card-warning .stats-card-icon {
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
            box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);
        }

        .stats-card-warning .stats-card-accent {
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        }

        .stats-card-warning:hover .stats-card-icon {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(245, 158, 11, 0.4);
        }

        /* Danger Card (Out of Stock) */
        .stats-card-danger .stats-card-icon {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            box-shadow: 0 4px 15px rgba(239, 68, 68, 0.3);
        }

        .stats-card-danger .stats-card-accent {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        }

        .stats-card-danger:hover .stats-card-icon {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(239, 68, 68, 0.4);
        }

        /* Responsive Design */
        @@media (max-width: 1200px) {
            .stats-cards-container {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @@media (max-width: 768px) {
            .stats-cards-container {
                grid-template-columns: 1fr;
                margin: 0 1rem 1.5rem 1rem;
                gap: 1rem;
            }

            .stats-card {
                padding: 1.5rem;
                gap: 1.25rem;
                min-height: 100px;
            }

            .stats-card-icon {
                width: 56px;
                height: 56px;
                font-size: 1.5rem;
            }

            .stats-card-value {
                font-size: 1.125rem;
            }

            .stats-card-label {
                font-size: 0.8rem;
                margin-bottom: 0.5rem;
            }
        }

        @@media (max-width: 480px) {
            .stats-cards-container {
                margin: 0 1rem 1rem 1rem;
            }

            .stats-card {
                padding: 1.25rem;
                gap: 1rem;
                min-height: 90px;
            }

            .stats-card-icon {
                width: 48px;
                height: 48px;
                font-size: 1.25rem;
            }

            .stats-card-value {
                font-size: 1.25rem;
            }

            .stats-card-label {
                font-size: 0.75rem;
                white-space: normal;
                text-align: left;
            }

            .stats-card-content {
                text-align: left;
            }
        }
    </style>
}

@section Scripts {
    <script src="~/js/products.js"></script>
    <script>
        // Console Log Show/Hide functionality
        document.addEventListener('DOMContentLoaded', function() {
            const showConsoleBtn = document.getElementById('showConsoleBtn');
            const toggleConsoleBtn = document.getElementById('toggleConsoleBtn');
            const consoleLogCard = document.getElementById('consoleLogCard');
            
            // Show console log when "Show Console Log" button is clicked
            showConsoleBtn.addEventListener('click', function() {
                consoleLogCard.style.display = 'block';
                showConsoleBtn.style.display = 'none';
            });
            
            // Hide console log when "Hide" button is clicked
            toggleConsoleBtn.addEventListener('click', function() {
                consoleLogCard.style.display = 'none';
                showConsoleBtn.style.display = 'inline-flex';
            });

            // Function to update tooltip values
            function updateTooltipValues() {
                const statsValues = document.querySelectorAll('.stats-card-value');
                statsValues.forEach(function(element) {
                    const currentValue = element.textContent || element.innerText;
                    element.setAttribute('title', currentValue);
                });
            }

            // Update tooltips initially
            updateTooltipValues();

            // Create a MutationObserver to watch for changes in stats values
            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.type === 'childList' || mutation.type === 'characterData') {
                        const target = mutation.target;
                        if (target.classList && target.classList.contains('stats-card-value')) {
                            const currentValue = target.textContent || target.innerText;
                            target.setAttribute('title', currentValue);
                        }
                    }
                });
            });

            // Start observing changes to stats card values
            const statsCards = document.querySelectorAll('.stats-card-value');
            statsCards.forEach(function(card) {
                observer.observe(card, {
                    childList: true,
                    characterData: true,
                    subtree: true
                });
            });

            // Also provide a global function to manually update tooltips
            window.updateStatsTooltips = updateTooltipValues;
        });
    </script>
}