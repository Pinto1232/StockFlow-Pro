services:
  stockflow-db:
    build:
      context: .
      dockerfile: Dockerfile.mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StockFlow123!
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"  # Changed back to standard SQL Server port
    volumes:
      - stockflow-db-data:/var/opt/mssql
    networks:
      - stockflow-network
      
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - stockflow-redis-data:/data
    networks:
      - stockflow-network
      
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - stockflow-network
      
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./StockFlowPro.UI/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./StockFlowPro.UI/dist:/usr/share/nginx/html
    depends_on:
      - frontend
    networks:
      - stockflow-network
      
  backend:
    build:
      context: .
      dockerfile: StockFlowPro.Web/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ConnectionStrings__DefaultConnection=Server=stockflow-db;Database=StockFlowPro;User=sa;Password=StockFlow123!;TrustServerCertificate=True;
      - Redis__Configuration=redis:6379
      - Jwt__Key=your-secure-key-here
      - Jwt__Issuer=StockFlowPro
      - Jwt__Audience=StockFlowPro-Client
    ports:
      - "5000:8080"
      - "5001:8081"
    volumes:
      - ./StockFlowPro.Web/App_Data:/app/App_Data
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
    networks:
      - stockflow-network
    depends_on:
      - stockflow-db
      - redis

  frontend:
    build:
      context: ./StockFlowPro.UI
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://backend:8080/api
      - VITE_WS_URL=ws://backend:8080
    ports:
      - "5173:5173"
    volumes:
      - ./StockFlowPro.UI:/app
      - /app/node_modules
    networks:
      - stockflow-network
    depends_on:
      - backend

volumes:
  stockflow-db-data:
  stockflow-redis-data:

networks:
  stockflow-network:
    driver: bridge